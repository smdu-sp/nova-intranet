import { NextRequest, NextResponse } from "next/server";
import { ldapAuth } from "@/lib/ldap-auth";
import { SessionManager } from "@/lib/session";

export async function POST(request: NextRequest) {
  try {
    const { username, password } = await request.json();
    console.log("üöÄ Tentativa de login para usu√°rio:", username);

    // Valida√ß√£o b√°sica
    if (!username || !password) {
      console.log("‚ùå Valida√ß√£o falhou: usu√°rio ou senha em branco");
      return NextResponse.json(
        { error: "Usu√°rio e senha s√£o obrigat√≥rios" },
        { status: 400 }
      );
    }

    console.log("‚úÖ Valida√ß√£o b√°sica passou, iniciando autentica√ß√£o LDAP...");

    // Autentica via LDAP
    const ldapUser = await ldapAuth.authenticate(username, password);

    if (!ldapUser) {
      console.log("‚ùå Autentica√ß√£o LDAP falhou para usu√°rio:", username);
      return NextResponse.json(
        { error: "Credenciais inv√°lidas. Verifique seu usu√°rio e senha." },
        { status: 401 }
      );
    }

    console.log("‚úÖ Autentica√ß√£o LDAP bem-sucedida, criando sess√£o...");

    // Cria a sess√£o
    const token = await SessionManager.createSession(ldapUser);
    console.log("‚úÖ Sess√£o criada com sucesso");

    // Define o cookie da sess√£o
    await SessionManager.setSessionCookie(token);
    console.log("‚úÖ Cookie de sess√£o definido");

    const responseData = {
      success: true,
      user: {
        username: ldapUser.sAMAccountName,
        displayName: ldapUser.displayName || ldapUser.cn,
        email: ldapUser.mail,
      },
    };

    console.log("üéâ Login conclu√≠do com sucesso:", responseData.user);
    return NextResponse.json(responseData);
  } catch (error) {
    console.error("üí• Erro no login:", {
      error: error,
      message: error instanceof Error ? error.message : "Erro desconhecido",
      stack: error instanceof Error ? error.stack : undefined,
    });
    return NextResponse.json(
      { error: "Erro interno do servidor. Tente novamente." },
      { status: 500 }
    );
  }
}
